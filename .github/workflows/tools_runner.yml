name: Run On Comment

on:
  issue_comment:
    types:
    - created

jobs:
  pmf2mp4:
    if: ${{ github.event.issue.title | contains("[PMF2MP4]") }}
    runs-on: windows-latest

    steps:
      - name: check if comment contains attachment
      - uses: actions-ecosystem/action-regex-match@v2
      - id: video-url
      - with:
          text: ${{ github.event.comment.body }}
          regex: '\[.*\]\((.*\.pmf)\)'

      - name: get video file name
        if: ${{ steps.regex-match.outputs.match != '' }}
      - uses: actions-ecosystem/action-regex-match@v2
      - id: video-name
      - with:
          text: ${{ github.event.comment.body }}
          regex: '\[.*\]\((.*\.pmf)\)'

      - name: checkout pmftools
        if: ${{ steps.regex-match.outputs.match != '' }}
      - uses: actions/checkout@v2
        with:
          repository: 'TeamPBCN/pmftools'
          
      - name: build psmfdump
        if: ${{ steps.regex-match.outputs.match != '' }}
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - run: dotnet build -c Release -o ./tools/bin pmftools/psmfdump/psmfdump.csproj

      - name: download attachment from comment
        if: ${{ steps.regex-match.outputs.match != '' }}
      - run: |
          curl -L -o /tmp/${{ steps.video-name.outputs.match }} ${{ steps.video-url.outputs.match }}
      
      - name: dump video and audio
        if: ${{ steps.regex-match.outputs.match != '' }}
      - run: |
          ./tools/bin/psmfdump.exe /tmp/${{ steps.video-name.outputs.match }} -a /tmp/${{ steps.video-name.outputs.match }}.oma -v /tmp/${{ steps.video-name.outputs.match }}.264

      - name: compose video
        if: ${{ steps.regex-match.outputs.match != '' }}
      - run: |
          ffmpeg -i /tmp/${{ steps.video-name.outputs.match }}.264 -i /tmp/${{ steps.video-name.outputs.match }}.oma -c copy -s 480x270 /tmp/${{ steps.video-name.outputs.match }}.mp4
      
      - name: upload video
        if: ${{ steps.regex-match.outputs.match != '' }}
      - uses: actions/upload-artifact@v1
        with:
          path: /tmp/${{ steps.video-name.outputs.match }}.mp4
          name: ${{ steps.video-name.outputs.match }}.mp4
          mime-type: video/mp4
          target-path: ${{ steps.video-name.outputs.match }}.mp4
          
