name: Run On Comment

on:
  issue_comment:
    types:
    - created

jobs:
  pmf2mp4:
    if: ${{ contains( github.event.issue.title, '[PMF2MP4]' ) }}
    runs-on: windows-latest

    steps:
      - name: check if comment contains attachment
        uses: actions-ecosystem/action-regex-match@v2
        id: video-url
        with:
          text: |
            '${{ github.event.comment.body }}'
          regex: '\[.*\]\((.*)\)'

      - name: get attached file name
        if: ${{ steps.video-url.outputs.match != '' }}
        uses: actions-ecosystem/action-regex-match@v2
        id: video-name
        with:
          text: |
            '${{ github.event.comment.body }}'
          regex: '\[(.*)\]\(.*\)'
      
      - name: download latest release of TeamPBCN/pmftools
        uses: robinraju/release-downloader@v1.3
        with:
          repository: TeamPBCN/pmftools
          tag: '1.0'
          fileName: pmftools.zip
      
      - name: unzip pmftools
        run: |
          unzip pmftools.zip

      - name: download attachment from comment
        if: ${{ steps.video-url.outputs.match != '' }}
        id: download-attachment
        run: |
          mkdir tmp
          curl -L -o './tmp/${{ steps.video-name.outputs.group1 }}' ${{ steps.video-url.outputs.group1 }}
          mv './tmp/${{ steps.video-name.outputs.group1 }}' ./tmp/video.pmf
      
      - name: dump video and audio
        if: ${{ steps.video-url.outputs.match != '' }}
        run: |
          ./tools/psmfdump.exe ./tmp/video.pmf -a ./tmp/audio.oma -v ./tmp/video.264

      - name: compose video
        if: ${{ steps.video-url.outputs.match != '' }}
        run: |
          ./tools/ffmpeg -i ./tmp/audio.oma -i ./tmp/video.264 -s 480x270 -map 0 -map 1 ./tmp/video.mp4
      
      - name: upload video
        if: ${{ steps.video-url.outputs.match != '' }}
        uses: actions/upload-artifact@v1
        with:
          path: ./tmp/video.mp4
          name: video.mp4
          mime-type: video/mp4
          target-path: video.mp4
          
